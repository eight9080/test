package com.example.alg.stringpck;

import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;

public class DifferenceStrings {

    /**
     * Given two strings s and t which consist of only lowercase letters.

     String t is generated by random shuffling string s and then add one more letter at a random position.

     Find the letter that was added in t.

     Example:

     Input:
     s = "abcd"
     t = "abcde"

     Output:
     e

     Explanation:
     'e' is the letter that was added.
     */
    public char findTheDifference(String s, String t) {

        final Map<Character, Long> initialChars = s.chars()
                .mapToObj(c -> (char) c)
                .collect(Collectors.groupingBy(Function.identity(), Collectors.counting()));

        for (int i = 0; i < t.length(); i++) {
            final char character = t.charAt(i);
            if(!initialChars.containsKey(character)){
                return character;
            }
            initialChars.put(character, initialChars.get(character)-1);
            if(initialChars.get(character)<0){
                return character;
            }
        }

        return ' ';
    }
}
